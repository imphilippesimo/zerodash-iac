version: '2'
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.1
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    container_name: elasticsearch
    networks:
      - webnet

  logstash:
    build:
      context: logstash/
    environment:
      - LS_JAVA_OPTS=-Xms512m -Xmx512m
      - XPACK_MONITORING_ENABLED=true
      - XPACK_MONITORING_ELASTICSEARCH_URL=http://35.174.133.79:9200
    ports:
      - 5044:5044
      - 9600:9600
      - 9700:9700
    volumes:
      -  /home/ec2-user/zerodash/zerodash-back/logs:/logs
    container_name: logstash
    depends_on:
      - elasticsearch
    networks:
      - webnet

  kibana:
    image: docker.elastic.co/kibana/kibana:7.5.1
    ports:
      - 5601:5601
    container_name: kibana
    depends_on:
      - elasticsearch
    networks:
      - webnet

  sonarqube:
    build:
      context: sonarqube/
    ports:
      - 9000:9000
    container_name: sonarqube

  jenkins:
    build:
      context: jenkins/
    privileged: true
    user: root
    ports:
      - 8081:8080
      - 50000:50000
    container_name: jenkins
    volumes:
      - /tmp/jenkins:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/bin/docker:/usr/bin/docker
      - /keystore:/keystore
    depends_on:
      - sonarqube
    networks:
      - webnet

  mysql:
    image: mysql:5.7.20
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=zerodash
      - MYSQL_PASSWORD=zerodash
      - MYSQL_DATABASE=zerodash
    ports:
      - 3307:3306
    container_name: mysql
    command:  mysqld --lower_case_table_names=1 --skip-ssl --character_set_server=utf8mb4 --explicit_defaults_for_timestamp --max_allowed_packet=32505856      # Set max_allowed_packet to 256M
    networks:
      - webnet
  adminer:
    image: adminer
    restart: always
    ports:
      - 8082:8080
    container_name: adminer
    networks:
      - webnet
  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - 8085:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    container_name: visualizer
    networks:
      - webnet
networks:
  webnet: